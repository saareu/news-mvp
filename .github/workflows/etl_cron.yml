name: etl-cron
on:
  # run every 3 hours
  schedule:
    - cron: "0 */3 * * *"
  # allow manual triggering for testing
  workflow_dispatch:
jobs:
  etl:
    # NOTE: This job is gated at runtime by `ETL_RUN_ENABLED` repository Variable.
    # We avoid job-level expressions to keep editors happy; the first step will skip when disabled.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check ETL enabled
        run: |
          if [ "${ETL_RUN_ENABLED:-false}" != "true" ]; then
            echo "ETL_RUN_ENABLED != true â€” skipping ETL job"
            exit 0
          fi
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -U pip && pip install .
      - name: Run ETL (prod)
        working-directory: ${{ github.workspace }}
        run: |
          python -m news_mvp.cli etl run --source ynet --env prod
          python -m news_mvp.cli etl run --source hayom --env prod
          python -m news_mvp.cli etl run --source haaretz --env prod
          python -m news_mvp.cli etl merge --env prod
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Check for changes
        id: check_changes
        run: |
          # Use `git status --porcelain` to detect both tracked modifications and new untracked files
          # Limit the check to the data/master and data/pics paths so the runner doesn't consider unrelated files
          changes=$(git status --porcelain --untracked-files=all -- "data/master" "data/pics")
          if [ -z "${changes}" ]; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in master CSV files or images"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "detected_changes<<EOF" >> $GITHUB_OUTPUT
            echo "$changes" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
      - name: Commit master CSV files and images
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # Print what the check step detected for debugging
          echo "Detected changes (porcelain):"
          echo "${{ steps.check_changes.outputs.detected_changes }}"

          git add -f data/master/master_*.csv data/pics/
          git commit -m "feat: Update master CSV files and images

          - Updated master CSV files with latest news data
          - Added/updated article images
          - Auto-generated by ETL pipeline on $(date -u +'%Y-%m-%d %H:%M UTC')

          Sources: ynet, hayom, haaretz"
      - name: Push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: git push
