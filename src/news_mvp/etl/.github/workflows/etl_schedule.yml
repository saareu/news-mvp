name: Scheduled ETL

on:
  schedule:
    # every 3 hours
    - cron: '0 */3 * * *'
  workflow_dispatch: {}

jobs:
  run-etl:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


      - name: Run ETL for ynet
        run: |
          python -m etl.pipelines.etl_by_source --source ynet --rss "https://www.ynet.co.il/Integration/StoryRss2.xml" --timeout 600 --retries 1

      - name: Run ETL for hayom
        run: |
          python -m etl.pipelines.etl_by_source --source hayom --rss "https://www.israelhayom.co.il/rss.xml" --timeout 600 --retries 1 --force-tz-offset 3

      - name: Run ETL for haaretz
        run: |
          python -m etl.pipelines.etl_by_source --source haaretz --rss "https://www.haaretz.co.il/srv/htz---all-articles" --timeout 600 --retries 1

      - name: Merge all masters into unified master_news.csv
        run: |
          python -m etl.load.merge_by_source --source data/master/master_ynet.csv data/master/master_hayom.csv data/master/master_haaretz.csv

      - name: List all CSVs before commit
        run: find . -name '*.csv'

      - name: Force add master CSVs
        run: git add -f data/master/master_*.csv

      - name: Commit and push changes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Only add likely updated directories/files; adjust as needed
          git add data/master data/canonical data/raw data/pics || true
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "ci(etl): update masters and artifacts [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi
